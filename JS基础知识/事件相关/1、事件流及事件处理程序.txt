===========================
什么是事件流？
    事件流描述的是从页面中接收事件的顺序。有意思的是，IE和Netscape
开发团队提出了完全相反的事件流概念。
    IE： 事件冒泡流  最具体到最不具体  兼容性好
    Netscape： 事件捕获流  不具体 -> 具体  兼容性不好

==========================
DOM事件流：
    “DOM2级事件”规定的事件流包括三个阶段：
        事件捕获阶段
        处于目标阶段
        事件冒泡阶段

    首先发生的是事件捕获，未截获事件提供了机会，然后是实际的目标
接收到事件。最后一个阶段是冒泡阶段，可以在这个阶段对事件作出响应。

流程如下 
    documnet -> html -> body -> div -> body -> html -> document

注意，在DOM事件流中，实际目标div元素在捕获阶段不会接收到事件，这就
意味着在捕获阶段，从document 到 html 再到 body 就停止了
实际上IE9以上在捕获阶段也会触发目标元素div

===========================
事件处理程序
    事件就是用户或浏览器自身执行的某种动过，如click、load、mouseover
    事件处理程序就是事件绑定的函数，事件处理程序的名字通常以“on”开头

===========================
DOM0级事件处理程序
    dom.onclick = function
    dom.mouseover = function
    ...

===========================
DOM2级事件处理程序
    “DOM2级事件”定义了两个方法，用于处理指定和删除事件处理程序的操作：
addEventListener()和removeEventListener()。所有的DOM节点都包含这
两个方法，并且都接收三个参数
    addEventListener(evenName, handler, boolean)
    boolean = true  => 捕获阶段调用事件处理程序
    boolean = false => 冒泡阶段调用事件处理程序

DOM2级可以为单个DOM添加多个事件，触发顺序以添加顺序为准

===========================
IE事件处理程序
    IE实现了与DOM中类似的两个方法：attachEvent() 和 detachEvent()。
这两个方法接受相同的两个参数：时间处理程序名称（带on）与事件处理程序函数

由于IE8及更早版本只支持事件冒泡，所以通过attachEvent()添加的事件处理
程序都会被添加到冒泡阶段

   *** 注意，在该方法中，this === window ***

attachEvent()也可以为同一元素添加多个事件处理程序，但是执行顺序是反的，
后添加先执行